import{b as E}from"./bail-0fe607cf.js";import{e as y}from"./extend-ad27d39c.js";import{i as z}from"./is-plain-obj-4f87c5a3.js";import{t as T}from"./trough-77adad87.js";import{V as C}from"./vfile-33e078b6.js";const j=function(n){const t=this.constructor.prototype,i=t[n],c=function(){return i.apply(c,arguments)};Object.setPrototypeOf(c,t);const a=Object.getOwnPropertyNames(i);for(const h of a){const u=Object.getOwnPropertyDescriptor(i,h);u&&Object.defineProperty(c,h,u)}return c},A={}.hasOwnProperty;class x extends j{constructor(){super("copy"),this.Compiler=void 0,this.Parser=void 0,this.attachers=[],this.compiler=void 0,this.freezeIndex=-1,this.frozen=void 0,this.namespace={},this.parser=void 0,this.transformers=T()}copy(){const e=new x;let s=-1;for(;++s<this.attachers.length;){const t=this.attachers[s];e.use(...t)}return e.data(y(!0,{},this.namespace)),e}data(e,s){return typeof e=="string"?arguments.length===2?(b("data",this.frozen),this.namespace[e]=s,this):A.call(this.namespace,e)&&this.namespace[e]||void 0:e?(b("data",this.frozen),this.namespace=e,this):this.namespace}freeze(){if(this.frozen)return this;const e=this;for(;++this.freezeIndex<this.attachers.length;){const[s,...t]=this.attachers[this.freezeIndex];if(t[0]===!1)continue;t[0]===!0&&(t[0]=void 0);const i=s.call(e,...t);typeof i=="function"&&this.transformers.use(i)}return this.frozen=!0,this.freezeIndex=Number.POSITIVE_INFINITY,this}parse(e){this.freeze();const s=m(e),t=this.parser||this.Parser;return w("parse",t),t(String(s),s)}process(e,s){const t=this;return this.freeze(),w("process",this.parser||this.Parser),g("process",this.compiler||this.Compiler),s?i(void 0,s):new Promise(i);function i(c,a){const h=m(e),u=t.parse(h);t.run(u,h,function(o,f,p){if(o||!f||!p)return r(o);const l=f,d=t.stringify(l,p);F(d)?p.value=d:p.result=d,r(o,p)});function r(o,f){o||!f?a(o):c?c(f):s(void 0,f)}}}processSync(e){let s=!1,t;return this.freeze(),w("processSync",this.parser||this.Parser),g("processSync",this.compiler||this.Compiler),this.process(e,i),O("processSync","process",s),t;function i(c,a){s=!0,E(c),t=a}}run(e,s,t){I(e),this.freeze();const i=this.transformers;return!t&&typeof s=="function"&&(t=s,s=void 0),t?c(void 0,t):new Promise(c);function c(a,h){const u=m(s);i.run(e,u,r);function r(o,f,p){const l=f||e;o?h(o):a?a(l):t(void 0,l,p)}}}runSync(e,s){let t=!1,i;return this.run(e,s,c),O("runSync","run",t),i;function c(a,h){E(a),i=h,t=!0}}stringify(e,s){this.freeze();const t=m(s),i=this.compiler||this.Compiler;return g("stringify",i),I(e),i(e,t)}use(e,...s){const t=this.attachers,i=this.namespace;if(b("use",this.frozen),e!=null)if(typeof e=="function")u(e,s);else if(typeof e=="object")Array.isArray(e)?h(e):a(e);else throw new TypeError("Expected usable value, not `"+e+"`");return this;function c(r){if(typeof r=="function")u(r,[]);else if(typeof r=="object")if(Array.isArray(r)){const[o,...f]=r;u(o,f)}else a(r);else throw new TypeError("Expected usable value, not `"+r+"`")}function a(r){if(!("plugins"in r)&&!("settings"in r))throw new Error("Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither");h(r.plugins),r.settings&&(i.settings=y(!0,i.settings,r.settings))}function h(r){let o=-1;if(r!=null)if(Array.isArray(r))for(;++o<r.length;){const f=r[o];c(f)}else throw new TypeError("Expected a list of plugins, not `"+r+"`")}function u(r,o){let f=-1,p=-1;for(;++f<t.length;)if(t[f][0]===r){p=f;break}if(p===-1)t.push([r,...o]);else if(o.length>0){let[l,...d]=o;const P=t[p][1];z(P)&&z(l)&&(l=y(!0,P,l)),t[p]=[r,l,...d]}}}}const k=new x().freeze();function w(n,e){if(typeof e!="function")throw new TypeError("Cannot `"+n+"` without `parser`")}function g(n,e){if(typeof e!="function")throw new TypeError("Cannot `"+n+"` without `compiler`")}function b(n,e){if(e)throw new Error("Cannot call `"+n+"` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.")}function I(n){if(!z(n)||typeof n.type!="string")throw new TypeError("Expected node, got `"+n+"`")}function O(n,e,s){if(!s)throw new Error("`"+n+"` finished async. Use `"+e+"` instead")}function m(n){return S(n)?n:new C(n)}function S(n){return!!(n&&typeof n=="object"&&"message"in n&&"messages"in n)}function F(n){return typeof n=="string"||D(n)}function D(n){return!!(n&&typeof n=="object"&&"byteLength"in n&&"byteOffset"in n)}export{k as u};
